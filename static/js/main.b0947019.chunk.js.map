{"version":3,"sources":["components/country-card/country-card.jsx","components/countries-list/country-list.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["CountryCard","props","country","name","CountriesList","countries","map","id","SearchBox","placeholder","changeHandler","type","onChange","App","changeSearchField","e","setState","searchField","target","value","getFilteredCountries","state","filter","toLowerCase","includes","a","fetch","json","users","this","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAMeA,EAJK,SAACC,GACnB,OAAO,6BAAKA,EAAMC,QAAQC,QCObC,EAPO,SAACH,GAErB,OAAOA,EAAMI,UAAUC,KAAI,SAACJ,GAC1B,OAAO,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQK,QCCtBC,EANG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAChC,OACE,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC4C9CG,E,kDAzCb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAeRa,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBrB,EAqBnBC,qBAAuB,WAIrB,OAH0B,EAAKC,MAAMhB,UAAUiB,QAAO,SAACpB,GAAD,OACpDA,EAAQC,KAAKoB,cAAcC,SAAS,EAAKH,MAAMJ,YAAYM,mBApB7D,EAAKF,MAAQ,CACXhB,UAAW,GACXY,YAAa,IALE,E,4FASnB,4BAAAQ,EAAA,sEAEUC,MAAM,8CAFhB,8BAGIC,OAHJ,OACQC,EADR,OAIEC,KAAKb,SAAS,CAAEX,UAAWuB,IAJ7B,gD,0EAmBA,WACE,OACE,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,CACEpB,cAAemB,KAAKf,kBACpBL,YAAY,yBAEd,cAAC,EAAD,CAAeJ,UAAWwB,KAAKT,gC,GApCrBW,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0947019.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CountryCard = (props) => {\r\n  return <h1>{props.country.name}</h1>;\r\n};\r\n\r\nexport default CountryCard;\r\n","import React from \"react\";\r\nimport CountryCard from \"../country-card/country-card\";\r\n\r\nconst CountriesList = (props) => {\r\n  // return an array of CountryCard component\r\n  return props.countries.map((country) => {\r\n    return <CountryCard key={country.id} country={country} />;\r\n  });\r\n};\r\n\r\nexport default CountriesList;\r\n","import React from \"react\";\r\nconst SearchBox = ({ placeholder, changeHandler }) => {\r\n  return (\r\n    <input type=\"search\" placeholder={placeholder} onChange={changeHandler} />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport CountriesList from \"./components/countries-list/country-list\";\nimport SearchBox from \"./components/search/search\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      countries: [],\n      searchField: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    const users = await (\n      await fetch(\"https://jsonplaceholder.typicode.com/users\")\n    ).json();\n    this.setState({ countries: users });\n  }\n\n  changeSearchField = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  // with each re-render this function will run\n  getFilteredCountries = () => {\n    const filteredCountries = this.state.countries.filter((country) =>\n      country.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n    );\n    return filteredCountries;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBox\n          changeHandler={this.changeSearchField}\n          placeholder=\"Search for a country\"\n        />\n        <CountriesList countries={this.getFilteredCountries()} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}